curl -sSLO https://raw.githubusercontent.com/hyperledger/fabric/main/scripts/install-fabric.sh && chmod +x install-fabric.sh
./install-fabric.sh docker samples binary
./network.sh down
./network.sh up
docker ps -a 
./network.sh createChannel
./network.sh up createChannel
./network.sh deployCC -ccn basic -ccp ../asset-transfer-basic/chaincode-go -ccl go
docker images | grep fabric-ccenv

./network.sh down./monitordocker.sh fabric_test
./network.sh up createChannel -ca


**************************************************
Path and deploy chaincode - run from test network
./network.sh deployCC -ccn libchain -ccp ../../contract -ccl go


**************************************************

Test 

export PATH=${PWD}/../bin:$PATH
export FABRIC_CFG_PATH=$PWD/../config/

export CORE_PEER_LOCALMSPID="Org1MSP"
export CORE_PEER_TLS_ROOTCERT_FILE=$PWD/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
export CORE_PEER_MSPCONFIGPATH=$PWD/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
export CORE_PEER_ADDRESS=localhost:7051

>>Call :

peer chaincode invoke -o localhost:7050 \
  --ordererTLSHostnameOverride orderer.example.com \
  --tls \
  --cafile $PWD/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem \
  -C mychannel \
  -n libchain \
  -c '{"function":"RegisterManufacturer","Args":["manu001","Tata","TataBrand"]}'


>>Query :

peer chaincode query -C mychannel -n libchain -c '{"function":"QueryBattery","Args":["battery001"]}'

******************************************************************

Postman : 


npm init -y
npm install express body-parser fabric-network
